 var max_wall_width = 5;
 
 var laser_length = 1;
 var laser_radius = 7/32;
 var laser_big_radius = 7/16;
 var laser_offset = 5/8;
 
 var sprayer_width = 9/16;
 var sprayer_length = 2 + 5/16;
 var sprayer_height = 1 + 5/8;
 
 var motor_radius = 15/16; motor_radius /= 2;
 var motor_length = 1 + 1/8;
 var gear_offset = 1/16;
 var gear_width = 3/16;
 var gear_radius = 1/4;
 
 var spring_delta = 1/4;
 
 var breadboard_length = 1 + 7/8 + 1/16;
 var breadboard_height = 1 + 3/8;
 var breadboard_thickness = 5/8;
 
 var bottle_height = 8.75;
 var bottle_radius = 2.75; bottle_radius /= 2;
 var bottle_neck_radius = 1 + 3/8; bottle_neck_radius /= 2;
 var bottle_neck_offset = 5/8;
 
 var thickness = 3/16;
 
 var wire_width = 3/32;
 
 var base_size = [thickness, breadboard_length + thickness*4 + laser_radius*2 + bottle_radius*2, 1 + breadboard_height + thickness*4];
 
 //stabilizer
 var stabilizer_radius = 1/4;
 var stabilizer_height = breadboard_thickness + thickness*2;
 
 //track
 var pin_width = wire_width;
 var handle_radius = 7/16;
 var full_track_length = base_size[1] - thickness*3;
 var handle_length = full_track_length/2 + thickness*2;
 var track_size  = [thickness*2 + wire_width*3, full_track_length/2 + thickness/2, thickness*2 + wire_width];
 
 //grip
 var grip_height = 1.5;
 var grip_radius = 1/8;
 
 function Grip()
 {
     var grip = cube([-(grip_radius*2 + stabilizer_height + stabilizer_radius),thickness,-grip_height]);
     
     
     
     return grip;
 }
 
 function Base()
 {
     var base = cube(base_size);
     
     //stabilizers
     var stabilizer = cylinder({'r' : stabilizer_radius, 'h': stabilizer_height}).rotateY(-90).translate([thickness,0,0]);
     stabilizer = union(stabilizer, sphere({'r': stabilizer_radius}).translate([-stabilizer_height + stabilizer_radius,0,0]));
     stabilizer = union(stabilizer, cube([thickness, stabilizer_radius*4,stabilizer_radius*4]).rotateX(45).translate([0,0,-stabilizer_radius]));
     
     base = union(base, stabilizer.translate([0,bottle_radius*2,-stabilizer_radius]));
     base = union(base, stabilizer.translate([0,base_size[1] - 1,-stabilizer_radius]));
     
     base = union(base, stabilizer.rotateX(180).translate([0,1,stabilizer_radius + base_size[2]]));
     base = union(base, stabilizer.rotateX(180).translate([0,base_size[1] - 1,stabilizer_radius + base_size[2]]));
     
     //grip
     base = union(base, Grip().translate([0,0,base_size[2]]));
     
     //track and handle
     var track = cylinder({'r': handle_radius, 'h': thickness*2 + wire_width*3}).rotateY(90).translate([0,handle_radius,handle_radius/2]);
     track = difference(track, cylinder({'r': handle_radius, 'h': 1}).translate([thickness*3 + wire_width, handle_radius, -0.25]));
     track = difference(track, cube([handle_radius*2, handle_radius*2, 1]).translate([thickness*2 + wire_width*3 - handle_radius, handle_radius, -0.25]));
     track = union(track, cube(track_size));
     track = union(track, cylinder({'r': 3/16, 'h': wire_width + thickness*2}).translate([thickness*3 + wire_width + 0.05, handle_radius, 0]));
     track = difference(track, cylinder({'r': pin_width*1.1/2, 'h': wire_width + thickness*2}).translate([thickness*3 + wire_width + 0.05, handle_radius, 0]));
     base = union(base, track.translate([thickness, handle_length - thickness, base_size[2] - track_size[2]/2 - 0.5]));
     
     var cutout = cube([thickness*2 + wire_width*3, full_track_length, wire_width]);
     base = difference(base, cutout.translate([0,thickness,base_size[2] - 0.5 - wire_width/2]));
     base = difference(base, cutout.scale([(wire_width*3)/(wire_width*3 + thickness*2),1,1]).rotateY(90).translate([thickness*2 + wire_width,thickness, base_size[2] - 0.5 + wire_width*1.5]));
     
     //breadboard
     var wire_cutout = cube([thickness,breadboard_length,wire_width*1.5]);
     
     base = difference(base, wire_cutout.translate([0,bottle_radius*2 + thickness,thickness]));
     
     base = difference(base, wire_cutout.translate([0,bottle_radius*2 + thickness, thickness + breadboard_height + wire_width*1.5]));
     
     //laser and sensor
        //laser
        var laser = cube([laser_length + 1/4, laser_radius*2, laser_radius + 1/8]).translate([0,0,-1/8]);
        laser = difference(laser, cylinder({'r' : laser_radius, 'h' : laser_length}).rotateY(90).translate([0,laser_radius,laser_radius]));
        laser = difference(laser, cylinder({'r' : laser_radius*0.75, 'h' : laser_length}).rotateY(90).translate([1,laser_radius,laser_radius]));
        laser = difference(laser, cube([1/16, laser_radius*2, laser_radius*2]).translate([laser_length + 3/32,0,0]));
        laser = difference(laser, cube([laser_length, laser_radius*2, laser_radius*2]).translate([0,0,laser_radius - 3/32]));
        
        base = union(base, laser.translate([thickness,bottle_radius*2 + breadboard_length + thickness*2.5,sprayer_height/2 + laser_radius + 1/8]));
        
        //sensor - pointing down
        var sensor = cube([wire_width*2, wire_width*5, 0.5]);
        
        sensor = difference(sensor, cube([wire_width*2, wire_width, 0.5]).translate([0,wire_width*2,0]));
        sensor = difference(sensor, cube([wire_width, wire_width*3, 0.5 - wire_width]).translate([0,wire_width,0]));
        
        base = union(base, sensor.translate([thickness,bottle_radius*2 + breadboard_length + thickness*1.5 + wire_width*1.8,]));
     
     //cover snaps
     
     
     //holders
        //motor holder
        var motor_holder = cylinder({'r': motor_radius + thickness, 'h': motor_length});
        motor_holder = intersection(motor_holder, cube([motor_length, motor_length, motor_length]));
        var motor_bezel = cylinder({'r': thickness/2, 'h': motor_length});
        motor_holder = union(motor_holder, motor_bezel.translate([0,motor_radius + thickness/2,0]));
        motor_holder = union(motor_holder, motor_bezel.translate([motor_radius + thickness/2,0,0]));
        motor_holder = motor_holder.rotateZ(45);
        motor_holder = union(motor_holder, cube([0.7,1,motor_length - thickness*3]).translate([-0.35,0,thickness*3/2]));
        motor_holder = difference(motor_holder, cylinder({'r':motor_radius, 'h': motor_length}));
        
        base = union(base, motor_holder.rotateY(90).translate([-motor_length/2,-1,0]).rotateZ(90).translate([thickness,bottle_radius + motor_length/2 + gear_offset + gear_width/2,thickness + breadboard_height/2 + wire_width*1.5]));
        
     return base;
 }
 
 function Rail()
 {
     
 }
 
 function Handle()
 {
     var handle = cylinder({'r': handle_radius, 'h': handle_length - handle_radius*2});
 
    handle = handle.rotateX(-90);
    
    var end = cylinder({'r': handle_radius, 'h': handle_radius*2}).translate([0,0,-handle_radius]);
    
    handle = union(handle, end);
    handle = union(handle, end.translate([0,handle_length - handle_radius*2,0]));
 
    handle = intersection(handle, handle.scale([1,3,1]).translate([0,-handle_length*0.75,0]));
 
    handle = difference(handle, cylinder({'r': pin_width*1.1/2, 'h': handle_radius*2}).translate([0, 0, -handle_radius]));
 
    handle = difference(handle, cube([track_size[0] + 1/8, track_size[1], track_size[2] + 1/8]).translate([-track_size[0] - 1/16, -0.4, -track_size[2]/2 - 1/16]));
 
    handle = difference(handle, cube([1,-1,track_size[2] + 1/8]).translate([-0.5, -0.05,-track_size[2]/2 - 1/16]));
    
    handle = difference(handle, cylinder({'r': 1/4, 'h': track_size[2] + 1/8}).translate([0,0,-track_size[2]/2 - 1/16]));
 
    handle = difference(handle, cylinder({'r': 1/8}).translate([0,0,handle_radius - 1/16]));
 
    handle = difference(handle, cylinder({'r': 1/8}).translate([0,0,-1 - handle_radius + 1/16]));
 
    return handle;
 }
 
 function Cover()
 {
     return cube();
 }
 
 function Sprayer()
 {
     var sprayer = cube([sprayer_length,sprayer_width,sprayer_width]);
     
     
     sprayer = sprayer.translate([-sprayer_width/2,-sprayer_width/2,bottle_height - sprayer_width]);     

     var bottle = cylinder({'r': bottle_radius, 'h' : bottle_height - sprayer_height});
     
     return union(sprayer,bottle);
 }
 
 function main()
 {
     var base = Base();
     base = base.translate([0,0,bottle_height - sprayer_height]);
     
     var cover = Cover();
     
     var sprayer = Sprayer();
     sprayer = sprayer.translate([sprayer_width/2 + thickness,bottle_radius,0]);
     
     var handle = Handle();
     //handle = handle.translate([thickness*3 + wire_width*3 + 0.05,handle_length - thickness + handle_radius,bottle_height - sprayer_height + base_size[2] - handle_radius - thickness/2]);
     
     return union(  base.setColor([0.2,0.2,0.2])
                    //,handle.setColor([0.2, 0.2, 0.2])
                    //,cover.setColor([0,0,0])
                    ,sprayer.setColor([0.5,0.5,0.5])
                    );
 }
